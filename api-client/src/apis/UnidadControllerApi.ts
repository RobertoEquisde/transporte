/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CrearUnidadRequest,
  UnidadDTO,
} from '../models/index';
import {
    CrearUnidadRequestFromJSON,
    CrearUnidadRequestToJSON,
    UnidadDTOFromJSON,
    UnidadDTOToJSON,
} from '../models/index';

export interface BuscarPorUltimosDigitosRequest {
    terminaEn: string;
}

export interface CrearUnidadOperationRequest {
    crearUnidadRequest: CrearUnidadRequest;
}

export interface EliminarUnidadPorSerieRequest {
    serie: string;
}

export interface ExportExcelPorMesDistribuidoraRequest {
    mes: string;
}

export interface ObtenerPorNumeroSerieRequest {
    serie: string;
}

/**
 * 
 */
export class UnidadControllerApi extends runtime.BaseAPI {

    /**
     */
    async buscarPorUltimosDigitosRaw(requestParameters: BuscarPorUltimosDigitosRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<UnidadDTO>>> {
        if (requestParameters['terminaEn'] == null) {
            throw new runtime.RequiredError(
                'terminaEn',
                'Required parameter "terminaEn" was null or undefined when calling buscarPorUltimosDigitos().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['terminaEn'] != null) {
            queryParameters['terminaEn'] = requestParameters['terminaEn'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/unidades/buscar-por-digitos`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(UnidadDTOFromJSON));
    }

    /**
     */
    async buscarPorUltimosDigitos(requestParameters: BuscarPorUltimosDigitosRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<UnidadDTO>> {
        const response = await this.buscarPorUltimosDigitosRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async crearUnidadRaw(requestParameters: CrearUnidadOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UnidadDTO>> {
        if (requestParameters['crearUnidadRequest'] == null) {
            throw new runtime.RequiredError(
                'crearUnidadRequest',
                'Required parameter "crearUnidadRequest" was null or undefined when calling crearUnidad().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/unidades`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CrearUnidadRequestToJSON(requestParameters['crearUnidadRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UnidadDTOFromJSON(jsonValue));
    }

    /**
     */
    async crearUnidad(requestParameters: CrearUnidadOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UnidadDTO> {
        const response = await this.crearUnidadRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async eliminarUnidadPorSerieRaw(requestParameters: EliminarUnidadPorSerieRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>> {
        if (requestParameters['serie'] == null) {
            throw new runtime.RequiredError(
                'serie',
                'Required parameter "serie" was null or undefined when calling eliminarUnidadPorSerie().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['serie'] != null) {
            queryParameters['serie'] = requestParameters['serie'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/unidades/eliminar`,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<string>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     */
    async eliminarUnidadPorSerie(requestParameters: EliminarUnidadPorSerieRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string> {
        const response = await this.eliminarUnidadPorSerieRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async exportExcelPorMesDistribuidoraRaw(requestParameters: ExportExcelPorMesDistribuidoraRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['mes'] == null) {
            throw new runtime.RequiredError(
                'mes',
                'Required parameter "mes" was null or undefined when calling exportExcelPorMesDistribuidora().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['mes'] != null) {
            queryParameters['mes'] = requestParameters['mes'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/unidades/reportes/`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async exportExcelPorMesDistribuidora(requestParameters: ExportExcelPorMesDistribuidoraRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.exportExcelPorMesDistribuidoraRaw(requestParameters, initOverrides);
    }

    /**
     */
    async listarRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<UnidadDTO>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/unidades`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(UnidadDTOFromJSON));
    }

    /**
     */
    async listar(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<UnidadDTO>> {
        const response = await this.listarRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async obtenerPorNumeroSerieRaw(requestParameters: ObtenerPorNumeroSerieRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UnidadDTO>> {
        if (requestParameters['serie'] == null) {
            throw new runtime.RequiredError(
                'serie',
                'Required parameter "serie" was null or undefined when calling obtenerPorNumeroSerie().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['serie'] != null) {
            queryParameters['serie'] = requestParameters['serie'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/unidades/buscar`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UnidadDTOFromJSON(jsonValue));
    }

    /**
     */
    async obtenerPorNumeroSerie(requestParameters: ObtenerPorNumeroSerieRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UnidadDTO> {
        const response = await this.obtenerPorNumeroSerieRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

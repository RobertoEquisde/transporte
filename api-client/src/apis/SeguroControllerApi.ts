/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CrearSeguroRequest,
  SeguroDTO,
} from '../models/index';
import {
    CrearSeguroRequestFromJSON,
    CrearSeguroRequestToJSON,
    SeguroDTOFromJSON,
    SeguroDTOToJSON,
} from '../models/index';

export interface BuscarPorFacturaRequest {
    factura: string;
}

export interface CrearSeguroOperationRequest {
    crearSeguroRequest: CrearSeguroRequest;
}

export interface EliminarPorFacturaRequest {
    factura: string;
}

/**
 * 
 */
export class SeguroControllerApi extends runtime.BaseAPI {

    /**
     */
    async buscarPorFacturaRaw(requestParameters: BuscarPorFacturaRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<SeguroDTO>>> {
        if (requestParameters['factura'] == null) {
            throw new runtime.RequiredError(
                'factura',
                'Required parameter "factura" was null or undefined when calling buscarPorFactura().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['factura'] != null) {
            queryParameters['factura'] = requestParameters['factura'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/seguros/buscar`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(SeguroDTOFromJSON));
    }

    /**
     */
    async buscarPorFactura(requestParameters: BuscarPorFacturaRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<SeguroDTO>> {
        const response = await this.buscarPorFacturaRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async crearSeguroRaw(requestParameters: CrearSeguroOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SeguroDTO>> {
        if (requestParameters['crearSeguroRequest'] == null) {
            throw new runtime.RequiredError(
                'crearSeguroRequest',
                'Required parameter "crearSeguroRequest" was null or undefined when calling crearSeguro().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/seguros`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CrearSeguroRequestToJSON(requestParameters['crearSeguroRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SeguroDTOFromJSON(jsonValue));
    }

    /**
     */
    async crearSeguro(requestParameters: CrearSeguroOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SeguroDTO> {
        const response = await this.crearSeguroRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async eliminarPorFacturaRaw(requestParameters: EliminarPorFacturaRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>> {
        if (requestParameters['factura'] == null) {
            throw new runtime.RequiredError(
                'factura',
                'Required parameter "factura" was null or undefined when calling eliminarPorFactura().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/seguros/factura/{factura}`.replace(`{${"factura"}}`, encodeURIComponent(String(requestParameters['factura']))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<string>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     */
    async eliminarPorFactura(requestParameters: EliminarPorFacturaRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string> {
        const response = await this.eliminarPorFacturaRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async listar1Raw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<SeguroDTO>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/seguros`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(SeguroDTOFromJSON));
    }

    /**
     */
    async listar1(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<SeguroDTO>> {
        const response = await this.listar1Raw(initOverrides);
        return await response.value();
    }

}

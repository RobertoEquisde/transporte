stages:
  - build-and-push
  - generate-api-client

# Etapa unificada para construir y subir la imagen Docker
build-and-push:
  stage: build-and-push
  image: docker:24.0.7
  services:
    - docker:24.0.7-dind
  before_script:
    - apk add --no-cache git
  script:
    # Construir la imagen Docker
    - docker build -t $CI_REGISTRY_IMAGE:latest .
    # Loguearse en DockerHub o GitLab Container Registry
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    # Asegurarse de que la imagen se descargue antes de intentar subirla
    - docker pull $CI_REGISTRY_IMAGE:latest || echo "No image found, skipping push."
    # Subir la imagen a Docker Hub o GitLab Container Registry
    - docker push $CI_REGISTRY_IMAGE:latest
  artifacts:
    paths:
      - /builds/$CI_PROJECT_PATH/$CI_COMMIT_REF_NAME/Dockerfile
    expire_in: 1 hour
  only:
    - main

# Generaci√≥n del cliente Angular al final
generate-api-client:
  stage: generate
  image: node:20.17.0
  script:
    - npm install -g @angular/cli@19
    - npm install -g openapi-typescript-codegen
    - git clone https://oauth2:${CI_PUSH_TOKEN}@gitlab.com/projects-dev4/adavec/prefactura-api-client.git api-client
    - cd api-client
    - rm -rf src/app/api
    - npx openapi-typescript-codegen --input https://transporte-api-latest.onrender.com/v3/api-docs --output src/app/api --client axios
    - git config user.email "ci-bot@example.com"
    - git config user.name "CI Bot"
    - git add src/app/api
    - git commit -m "üîÅ Auto-generado desde backend commit $CI_COMMIT_SHORT_SHA" || echo "Sin cambios"
    - git push origin main
  only:
    - main

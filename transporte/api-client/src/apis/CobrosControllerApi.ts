/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CobroDTO,
  CrearCobroRequest,
} from '../models/index';
import {
    CobroDTOFromJSON,
    CobroDTOToJSON,
    CrearCobroRequestFromJSON,
    CrearCobroRequestToJSON,
} from '../models/index';

export interface Crear2Request {
    crearCobroRequest: CrearCobroRequest;
}

export interface ListarPorUnidadRequest {
    unidadId: number;
}

/**
 * 
 */
export class CobrosControllerApi extends runtime.BaseAPI {

    /**
     */
    async crear2Raw(requestParameters: Crear2Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters['crearCobroRequest'] == null) {
            throw new runtime.RequiredError(
                'crearCobroRequest',
                'Required parameter "crearCobroRequest" was null or undefined when calling crear2().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/cobros`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CrearCobroRequestToJSON(requestParameters['crearCobroRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     */
    async crear2(requestParameters: Crear2Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.crear2Raw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async listarPorUnidadRaw(requestParameters: ListarPorUnidadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<CobroDTO>>> {
        if (requestParameters['unidadId'] == null) {
            throw new runtime.RequiredError(
                'unidadId',
                'Required parameter "unidadId" was null or undefined when calling listarPorUnidad().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/cobros/unidad/{unidadId}`.replace(`{${"unidadId"}}`, encodeURIComponent(String(requestParameters['unidadId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(CobroDTOFromJSON));
    }

    /**
     */
    async listarPorUnidad(requestParameters: ListarPorUnidadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<CobroDTO>> {
        const response = await this.listarPorUnidadRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
